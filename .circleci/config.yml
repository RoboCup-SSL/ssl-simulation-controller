version: 2
jobs:
  app:
    docker:
      - image: cimg/go:1.23@sha256:d89753cdb9f31e48c3a91aee6e73afcb23ad7e44abf7088491d8a9f002a71b67

    steps:
      - checkout
      - run: go get -v -t -d ./...
      - run: go test -v -covermode=count -coverprofile=count.out ./...
      - run: go tool cover -html=count.out -o coverage.html
      - run:
          working_directory: cmd/ssl-simulation-controller
          command: |
            GOOS=linux GOARCH=amd64 go build -o ../../release/ssl-simulation-controller_linux_amd64
            GOOS=darwin GOARCH=amd64 go build -o ../../release/ssl-simulation-controller_darwin_amd64
            GOOS=windows GOARCH=amd64 go build -o ../../release/ssl-simulation-controller_windows_amd64.exe
      - persist_to_workspace:
          root: .
          paths:
            - release/*
      - store_artifacts:
          path: coverage.html
          destination: coverage

  publish-github-release:
    docker:
      - image: cimg/go:1.23@sha256:d89753cdb9f31e48c3a91aee6e73afcb23ad7e44abf7088491d8a9f002a71b67
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Prepare artifacts"
          working_directory: release
          command: |
            mv ssl-simulation-controller_linux_amd64 ssl-simulation-controller_${CIRCLE_TAG}_linux_amd64
            mv ssl-simulation-controller_darwin_amd64 ssl-simulation-controller_${CIRCLE_TAG}_darwin_amd64
            mv ssl-simulation-controller_windows_amd64.exe ssl-simulation-controller_${CIRCLE_TAG}_windows_amd64.exe
      - run:
          name: "Publish Release on GitHub"
          command: |
            go install github.com/tcnksm/ghr@v0.14.0
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./release/

  docker:
    docker:
      - image: cimg/base:2025.01@sha256:f6b81723236539a091130e4f0e57c599253abf2e3980aa4e60eeee871b4e2ef7
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          TAG=${CIRCLE_TAG:1}
          TAG=${TAG:-latest}
          docker build -t robocupssl/ssl-simulation-controller:$TAG .
          docker login -u "${DOCKER_HUB_USERNAME}" -p "${DOCKER_HUB_PASSWORD}"
          docker push robocupssl/ssl-simulation-controller:$TAG

workflows:
  version: 2
  main:
    jobs:
      - app:
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          context: github
          requires:
            - app
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - docker:
          context: docker hub
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/

